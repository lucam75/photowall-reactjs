{"version":3,"sources":["Components/Title.js","Components/Photo.js","Components/Photowall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Login.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","data/posts.js","redux/reducer.js","index.js"],"names":["Title","react_default","a","createElement","className","react_router_dom","to","this","props","title","user","email","Component","Photo","post","concat","id","src","imageLink","alt","description","onClick","startRemovingPost","index","history","push","comments","length","Photowall","posts","sort","b","map","Components_Photo","Object","assign","key","AddPhoto","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","preventDefault","target","elements","link","value","imageDesc","Number","Date","startAddingPost","onSubmit","type","placeholder","name","Comments","comment","startAddingComment","Single","_this$props","match","params","find","findIndex","loading","Components_Comments","Login","loginWithGoogle","_this2","password","LoginWithFirebase","then","_this3","LoginWithGoogle","width","Main","state","startLoadingPost","startLoadingComments","setState","Components_Title","react_router","path","render","Components_Login","exact","Components_Photowall","Components_AddPhoto","Components_Single","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","googleProvider","GoogleAuthProvider","dispatch","ref","update","defineProperty","catch","error","console","log","child","on","snapshot","forEach","childSnapshot","val","loadPosts","_updates","updates","removePost","postId","addComment","once","values","loadComments","addPost","signInWithEmailAndPassword","alert","message","currentUser","setUserData","signInWithPopup","result","JSON","stringify","startTesting","onAuthStateChanged","App","withRouter","connect","bindActionCreators","actions","rootReducer","combineReducers","arguments","undefined","_posts","action","toConsumableArray","slice","objectSpread","store","createStore","compose","applyMiddleware","thunk","ReactDOM","es","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6fec9778.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Title extends Component{\r\n\r\n    render(){\r\n        \r\n    return <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <nav className=\"navbar navbar-light bg-light\">\r\n                        <h1><Link to=\"/\">{this.props.title}</Link></h1>\r\n                        {\r\n                            this.props.user.email ?\r\n                                <Link className=\"add-photo btn btn-primary\" to=\"/AddPhoto\">Add Photo</Link> : ''\r\n                            \r\n                        }\r\n                        {\r\n                        !this.props.user.email? <Link className=\"\" to=\"/Login\"><span className=\"logInIcon\"></span></Link> : <span>{this.props.user.email}</span>\r\n                        }\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default Title;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Photo(props){\r\n    const post = props.post;\r\n    return <figure className=\"figure\">\r\n                <Link to={`/Single/${post.id}`}><img src={post.imageLink} className=\"photo\"\r\n                alt={post.description} /></Link>\r\n                <figcaption>\r\n                    <p>{post.description}</p>\r\n                </figcaption>\r\n                <div className=\"button-container\">\r\n                    <Link className=\"button\" to=\"\" onClick={()=>{\r\n                        props.startRemovingPost(props.index, post.id)\r\n                        props.history.push('/')\r\n                    }}>Remove</Link>\r\n                    <Link className=\"button\" to={'/Single/'+post.id}>\r\n                        <div className=\"comment-count\">\r\n                            <div className=\"speech-bubble\"></div>\r\n                            {props.comments[post.id]? props.comments[post.id].length:0}\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </figure>\r\n}\r\n\r\nPhoto.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Photo;","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Photowall(props){\r\n    return <div>\r\n                <div className=\"photoGrid row\">\r\n                    {props.posts.sort((a,b) =>{return b.id - a.id}).map((post, index) => <Photo key={index} post={post} {...props} index={index} />)}\r\n                </div>\r\n            </div>\r\n}\r\n\r\nPhotowall.propTypes = {\r\n    posts: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Photowall;","import React, {Component} from 'react'\r\n\r\nclass AddPhoto extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const imageLink = event.target.elements.link.value\r\n        const imageDesc = event.target.elements.description.value\r\n        if(imageLink && imageDesc){\r\n            const post={\r\n                id: Number(new Date()),\r\n                description: imageDesc,\r\n                imageLink: imageLink\r\n            }\r\n            this.props.startAddingPost(post)\r\n            this.props.history.push('/')\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"Link\" name=\"link\"></input>\r\n                    <input type=\"text\" placeholder=\"Description\" name=\"description\"></input>\r\n                    <button>Post</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPhoto","import React, {Component} from 'react'\r\n\r\nclass Comments extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        const comment = event.target.elements.comment.value\r\n        this.props.startAddingComment(comment, this.props.id)\r\n        event.target.elements.comment.value = ''\r\n    }\r\n\r\n    render(){\r\n       \r\n        return (\r\n            <div className=\"comment\">\r\n            {\r\n                this.props.comments.map((comment, index) => {\r\n                    return (\r\n                        <p key={index}> {comment} </p>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                this.props.user? \r\n                <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"comment\" name=\"comment\"></input>\r\n                    <input type=\"submit\"></input>\r\n                </form>\r\n                :\r\n                ''\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comments","import React, {Component} from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\n\r\nclass Single extends Component{\r\n\r\n    render(){\r\n        const {posts, match} = this.props\r\n        const id = Number(match.params.id)\r\n        const post = posts.find((post) => post.id === id)\r\n        const comments = this.props.comments[id] || []\r\n        const index = this.props.posts.findIndex((post) => post.id === id)\r\n\r\n        if(this.props.loading === true){\r\n            return <div className=\"loader\">...loading</div>\r\n        }else if(post){\r\n            return (\r\n                <div className='single-photo'>\r\n                    <Photo post={post} {...this.props} index={index} />\r\n                    <Comments startAddingComment={this.props.startAddingComment} comments={comments} id={id} />\r\n                </div>\r\n            )\r\n        }else{\r\n            return <h1> ..no post found</h1>\r\n        }\r\n    }\r\n} \r\n\r\nexport default Single;","import React, { Component } from \"react\";\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.loginWithGoogle = this.loginWithGoogle.bind(this)\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const email = event.target.elements.email.value\r\n        const password = event.target.elements.password.value\r\n        if(email && password){\r\n\r\n            this.props.LoginWithFirebase(email, password).then(() => {\r\n                if(this.props.user.email) this.props.history.push('/')\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    loginWithGoogle(event){\r\n        event.preventDefault();\r\n        this.props.LoginWithGoogle().then(() => {\r\n            if(this.props.user.email) this.props.history.push('/')\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n                <div className=\"form\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"text\" placeholder=\"Email\" name=\"email\"></input>\r\n                        <input type=\"password\" placeholder=\"Password\" name=\"password\"></input>\r\n                        <button>Log in with User and Password</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 text-center\">\r\n                        <p>Or</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form\">\r\n                        <button className=\"sign-with-google-button\" onClick={this.loginWithGoogle}>\r\n                        <img width=\"20px\" alt=\"Google &quot;G&quot; Logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\"/>\r\n                         Sign in with Google\r\n                        </button>\r\n                        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React,{Component} from 'react';\nimport Title from './Title'\nimport Photowall from './Photowall'\nimport AddPhoto from './AddPhoto';\nimport {Route} from 'react-router-dom';\nimport Single from './Single'\nimport Login from './Login'\n\nclass Main extends Component{\n\n  state = {loading: true}\n\n  componentDidMount(){\n    this.props.startLoadingPost()\n    this.props.startLoadingComments().then(()=>{ this.setState({loading: false})})\n    //this.props.startTesting();\n  }\n\n  render() {\n    return (\n      <div className=\"Main container-fluid\">\n        <Title title=\"Photowall\" {...this.props} />\n\n        <Route path=\"/Login\" render={() => (\n          <div>\n            <Login {...this.props} />\n          </div>\n        )} />\n\n        <Route exact path=\"/\" render={() => (\n          <div>\n            <Photowall {...this.props} />\n          </div>\n        )} />\n\n        <Route path=\"/AddPhoto\" render={() => (\n          <div>\n            <AddPhoto {...this.props} />\n          </div>\n        )} />\n\n        <Route path=\"/Single/:id\" render={(params) => (\n          <div>\n            <Single loading={this.state.loading} {...this.props} {...params} />\n          </div>\n        )} />\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDYaVuVpIBDDSbQLK4wNYzF2SKKRXK2Hz8\",\r\n    authDomain: \"photowall-e5230.firebaseapp.com\",\r\n    databaseURL: \"https://photowall-e5230.firebaseio.com\",\r\n    projectId: \"photowall-e5230\",\r\n    storageBucket: \"photowall-e5230.appspot.com\",\r\n    messagingSenderId: \"726190033409\",\r\n    appId: \"1:726190033409:web:81e47f8c68236a02\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst database = firebase.database()\r\nconst auth = firebase.auth()\r\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {database, auth, googleProvider}","import {database, auth, googleProvider} from '../database/config'\r\nexport function startAddingPost(post){\r\n    return(dispatch) => {\r\n        return database.ref('posts').update({[post.id]: post}).then(() => {\r\n            //dispatch(addPost(post))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingPost() {\r\n    return(dispatch) => {\r\n        return database.ref().child('posts').on('value', snapshot => {\r\n            let posts = []\r\n            snapshot.forEach((childSnapshot) => {\r\n                posts.push(childSnapshot.val())\r\n            })\r\n            dispatch(loadPosts(posts))\r\n        })\r\n    }\r\n}\r\n\r\nexport function startRemovingPost(index, id) {\r\n \r\n    const updates = {\r\n     [`posts/${id}`]: null,\r\n     [`comments/${id}`]: null\r\n    }\r\n    \r\n    return (dispatch) => {\r\n        return database.ref().update(updates).then(() => {\r\n            dispatch(removePost(index))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startAddingComment(comment, postId){\r\n    return(dispatch) => {\r\n        return database.ref('comments/'+postId).push(comment).then(() => {\r\n            dispatch(addComment(comment, postId))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingComments(){\r\n    return(dispatch) => {\r\n        return database.ref('comments').once('value').then((snapshot) => {\r\n            let comments = {}\r\n            snapshot.forEach((childSnapshot) => {\r\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\r\n            })\r\n            dispatch(loadComments(comments))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function loadComments(comments){\r\n    return {\r\n        type: 'LOAD_COMMENTS',\r\n        comments\r\n    }\r\n}\r\n\r\nexport function removePost(index){\r\n    return{\r\n        type: 'REMOVE_POST',\r\n        index: index\r\n    }\r\n }\r\n\r\nexport function addPost(post){\r\n    return{\r\n       type: 'ADD_POST',\r\n       post: post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId){\r\n    return{\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts){\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n}\r\n\r\nexport function LoginWithFirebase(email, password){\r\n    return(dispatch) => {\r\n        return auth.signInWithEmailAndPassword(email, password).catch(function(error) {\r\n            alert(error.message)\r\n        }).then(() => {\r\n            console.log(auth.currentUser);\r\n            dispatch(setUserData(auth.currentUser))\r\n        })\r\n    }\r\n}\r\n\r\nexport function LoginWithGoogle(){\r\n    return(dispatch) => {\r\n        return auth.signInWithPopup(googleProvider).then(function(result) {\r\n            // This gives you a Google Access Token. You can use it to access the Google API.\r\n            //var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            // ...\r\n            console.log('User from Google');\r\n            console.log(JSON.stringify(user));\r\n            dispatch(setUserData(user))\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            //var errorCode = error.code;\r\n            //var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            //var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            //var credential = error.credential;\r\n            // ...\r\n            console.log(JSON.stringify(error));\r\n          });\r\n    }\r\n}\r\n\r\nexport function startTesting(){\r\n    return(dispatch) => {\r\n        return auth.onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n              console.log('user login')\r\n              dispatch(setUserData(user))\r\n            } else {\r\n              // User is signed out.\r\n              console.log('user signed out')\r\n            }\r\n          });\r\n    }\r\n}\r\n\r\nexport function setUserData(user){\r\n    return{\r\n        type: 'SET_LOGGED_USER',\r\n        user\r\n    }\r\n}","import Main from './Main'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as actions from '../redux/actions'\r\nimport {withRouter} from 'react-router'\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        posts: state.posts,\r\n        comments: state.comments,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return bindActionCreators(actions, dispatch)\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\r\n\r\nexport default App","const posts = []\r\n\r\nexport default posts;","import _posts from '../data/posts'\r\nimport { combineReducers } from \"redux\";\r\n\r\nfunction comments(state = [], action){\r\n    switch(action.type){\r\n        case 'ADD_COMMENT': \r\n            if(!state[action.postId]){\r\n                return {...state, [action.postId]: [action.comment]}\r\n            }else{\r\n                return {...state, [action.postId]: [...state[action.postId], action.comment] }\r\n            }\r\n        case 'LOAD_COMMENTS': return action.comments\r\n        default: return state\r\n    }\r\n    \r\n}\r\n\r\nfunction posts(state = _posts, action){\r\n    switch(action.type){\r\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case 'ADD_POST': return [...state, action.post]\r\n        case 'LOAD_POSTS': return action.posts\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction user(state = {}, action){\r\n    switch(action.type){\r\n        case 'SET_LOGGED_USER': return action.user\r\n        default: return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({posts, comments, user})\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './redux/reducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './css/Styles.css'\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}